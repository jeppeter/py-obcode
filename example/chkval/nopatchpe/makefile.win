CURDIR=$(MAKEDIR)
!IFNDEF TOPDIR
TOPDIR=$(CURDIR)\..\..\..
!ENDIF

CC      = cl.exe
LD      = link.exe
AR      = lib.exe
RM      = del
PYTHON  = python.exe
CP      = copy /Y


!IFDEF MAKEVERBOSE
!IF $(MAKEVERBOSE) != 0
QUIETCMD=
NOLOGO_CFLAGS=
NOLOGO_LDFLAGS=
NOLOGO_MAKEFLAGS=
GIT_VERBOSE=
PYTHON_VERBOSE= -vvvv
NMAKE_VERBOSE=
!ELSE
QUIETCMD=@
NOLOGO_CFLAGS=/nologo
NOLOGO_LDFLAGS=/nologo
NOLOGO_MAKEFLAGS=/NOLOGO
GIT_VERBOSE=--quiet
PYTHON_VERBOSE=
NMAKE_VERBOSE=/NOLOGO
!ENDIF
!ELSE
QUIETCMD=@
NOLOGO_CFLAGS=/nologo
NOLOGO_LDFLAGS=/nologo
NOLOGO_MAKEFLAGS=/NOLOGO
GIT_VERBOSE=--quiet
PYTHON_VERBOSE=
NMAKE_VERBOSE=/NOLOGO
!ENDIF


!IFNDEF MAIN_SRC
main_src_target:
	$(QUIETCMD)echo off && $(PYTHON) $(TOPDIR)\obchkval.py $(PYTHON_VERBOSE) chkvaldatafiles main >bb.txt && FOR /F "delims=" %%G in (bb.txt) do set MAIN_SRC=%%G && del bb.txt  && nmake  $(NMAKE_VERBOSE) /f $(CURDIR)\makefile.win COM_TARGET=$(COM_TARGET)
!ENDIF

!IFNDEF MAIN2_SRC
main2_src_target:
	$(QUIETCMD)echo off && $(PYTHON) $(TOPDIR)\obchkval.py $(PYTHON_VERBOSE) chkvaldatafiles main2 >cc.txt && FOR /F "delims=" %%G in (cc.txt) do set MAIN2_SRC=%%G  && del cc.txt && nmake $(NMAKE_VERBOSE) /f $(CURDIR)\makefile.win COM_TARGET=$(COM_TARGET)
!ENDIF

!IFNDEF MAIN_EXIT_SRC
main_exit_src_target:
	$(QUIETCMD)echo off && $(PYTHON) $(TOPDIR)\obchkval.py $(PYTHON_VERBOSE) chkvalexitfiles main >dd.txt && FOR /F "delims=" %%G in (dd.txt) do set MAIN_EXIT_SRC=%%G && del dd.txt  && nmake $(NMAKE_VERBOSE) /f $(CURDIR)\makefile.win COM_TARGET=$(COM_TARGET)
!ENDIF

!IFNDEF MAIN2_EXIT_SRC
main2_exit_src_target:
	$(QUIETCMD)echo off && $(PYTHON) $(TOPDIR)\obchkval.py $(PYTHON_VERBOSE) chkvalexitfiles main2 >ee.txt && FOR /F "delims=" %%G in (ee.txt) do set MAIN2_EXIT_SRC=%%G  && del ee.txt && nmake  $(NMAKE_VERBOSE) /f $(CURDIR)\makefile.win COM_TARGET=$(COM_TARGET) $(COM_TARGET)
!ENDIF


!IFDEF MAIN_SRC
!IFDEF MAIN2_SRC
!IFDEF MAIN_EXIT_SRC
!IFDEF MAIN2_EXIT_SRC
all:$(MAIN_SRC)
	$(QUIETCMD)echo; "all MAIN_SRC["$(MAIN_SRC)"]"


$(MAIN_SRC):
	$(QUIETCMD)$(PYTHON) $(TOPDIR)\obchkval.py $(PYTHON_VERBOSE) fmtchkval --obchkkey main 'includefiles;chk_main.h' 'includefiles;main.h' 'includefiles;callc.h' '$(CURDIR)\callc.obj;callc_a,callc_b,callc_c' '$(CURDIR)\main.obj;print_out_a,print_out_b,print_out_c'

clean:
	$(QUIETCMD)echo; "clean MAIN_SRC["$(MAIN_SRC)"]"
	$(QUIETCMD)del $(MAIN_SRC)	2>NUL
	$(QUIETCMD)del obcode.json 2>NUL
# end of MAIN2_EXIT_SRC
!ENDIF
# end of MAIN_EXIT_SRC
!ENDIF
# end of MAIN2_SRC
!ENDIF
# end of MAIN_SRC
!ENDIF