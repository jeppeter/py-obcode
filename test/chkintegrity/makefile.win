
CURDIR=$(MAKEDIR)
OBCODE_DIR=$(CURDIR)\..\..
CLIBS_DIR=$(CURDIR)\clibs
DYNAMICDIR=$(CLIBS_DIR)\dynamiclib
STATICDIR=$(CLIBS_DIR)\staticlib

CC      = cl.exe
LD      = link.exe
AR      = lib.exe
RM      = del
PYTHON  = python.exe
GIT     = git.exe
CP      = copy /Y

!IFDEF UNICODE_MODE
!IF $(UNICODE_MODE) != 0
UNICODE_CFLAGS=-DUNICODE -D_UNICODE
!ELSE
UNICODE_CFLAGS=
!ENDIF
!ELSE
UNICODE_CFLAGS=
!ENDIF


!IFDEF MAKEVERBOSE
!IF $(MAKEVERBOSE) != 0
QUIETCMD=
NOLOGO_CFLAGS=
NOLOGO_LDFLAGS=
NOLOGO_MAKEFLAGS=
GIT_VERBOSE=
!ELSE
QUIETCMD=@
NOLOGO_CFLAGS=/nologo
NOLOGO_LDFLAGS=/nologo
NOLOGO_MAKEFLAGS=/NOLOGO
GIT_VERBOSE=--quiet
!ENDIF
!ELSE
QUIETCMD=@
NOLOGO_CFLAGS=/nologo
NOLOGO_LDFLAGS=/nologo
NOLOGO_MAKEFLAGS=/NOLOGO
GIT_VERBOSE=--quiet
!ENDIF

!IFDEF STATICLIB
!IF $(STATICLIB) != 0
STATIC_LIB_CFLAGS=-DWINLIB_STATIC_EXPORT /MT
EXTARGSLIB_VALUE=1
WINLIB_VALUE=1

INC_LDFLAGS = "$(STATICDIR)\extargslib.lib" "$(STATICDIR)\winlib.lib" "$(STATICDIR)\json.lib"

!ELSE
STATIC_LIB_CFLAGS=-DWINLIB_DLL_IMPORT /MT
EXTARGSLIB_VALUE=0
WINLIB_VALUE=0

INC_LDFLAGS = "$(DYNAMICDIR)\extargslib.lib" "$(DYNAMICDIR)\winlib.lib" "$(DYNAMICDIR)\json.lib"

!ENDIF
!ELSE
STATIC_LIB_CFLAGS=-DWINLIB_DLL_IMPORT /MT
EXTARGSLIB_VALUE=0
WINLIB_VALUE=0

INC_LDFLAGS = "$(DYNAMICDIR)\extargslib.lib" "$(DYNAMICDIR)\winlib.lib" "$(DYNAMICDIR)\json.lib"
!ENDIF

INC_CFLAGS = /I"$(OBCODE_DIR)\include" /I"$(OBCODE_DIR)\src" /I"$(CLIBS_DIR)\common\extargslib" /I"$(CLIBS_DIR)\winlib" /I"$(CLIBS_DIR)\common\jsonlib" /I"$(CLIBS_DIR)\common"
COM_CFLAGS = /Wall /wd"4820" /wd"4668" /wd"4127" /wd"4510" /wd"4512" /wd"4610" /wd"4710" /wd"5045"
REL_CFLAGS = 
DBG_CFLAGS = /Zi /Od 


#INC_LDFLAGS = "$(CLIBS_DIR)\winlib\winlib.lib" Advapi32.lib
REL_LDFLAGS = 

CFLAGS  = $(UNICODE_CFLAGS) $(NOLOGO_CFLAGS) $(STATIC_LIB_CFLAGS) $(INC_CFLAGS) $(COM_CFLAGS) $(REL_CFLAGS) $(DBG_CFLAGS)
LDFLAGS = $(NOLOGO_LDFLAGS) $(INC_LDFLAGS) $(REL_LDFLAGS)

SOURCES=main.cpp
OBJECTS=$(SOURCES:.cpp=.obj)

all:chkintegrity.exe

!IFDEF STATICLIB
!IF $(STATICLIB) != 0
chkintegrity.exe:$(OBJECTS) $(STATICDIR)\winlib.lib $(STATICDIR)\json.lib $(STATICDIR)\extargslib.lib
	$(QUIETCMD) echo "call static $(OBJECTS)"
	$(QUIETCMD)$(LD) -out:$@  $(LDFLAGS)  $(OBJECTS)
	$(QUIETCMD)echo "use static lib"
!ELSE
chkintegrity.exe:$(OBJECTS)  $(DYNAMICDIR)\winlib.dll $(DYNAMICDIR)\json.dll $(DYNAMICDIR)\extargslib.dll
	$(QUIETCMD) echo "call dynamic $(OBJECTS)"
	$(QUIETCMD)$(LD) -out:$@ $(LDFLAGS) $(OBJECTS)
	$(QUIETCMD)echo "use dynamic lib"
!ENDIF	

!ELSE
chkintegrity.exe:$(OBJECTS)  $(DYNAMICDIR)\winlib.dll $(DYNAMICDIR)\json.dll $(DYNAMICDIR)\extargslib.dll
	$(QUIETCMD) echo "call dynamic $(OBJECTS)"
	$(QUIETCMD)$(LD) -out:$@ $(LDFLAGS) $(OBJECTS)
	$(QUIETCMD) copy /Y $(DYNAMICDIR)\extargslib.dll $(CURDIR)\extargslib.dll
	$(QUIETCMD) copy /Y $(DYNAMICDIR)\winlib.dll $(CURDIR)\winlib.dll
	$(QUIETCMD) copy /Y $(DYNAMICDIR)\json.dll $(CURDIR)\json.dll
	$(QUIETCMD)echo "use dynamic lib"
!ENDIF


.cpp.obj:
	$(QUIETCMD)$(CC) $(CFLAGS) -c -Fo$@ $<

main.cpp:args_options.cpp

args_options.cpp:args_options.cpp.tmpl chkintegrity.json $(CLIBS_DIR)\coutput.py
	$(QUIETCMD)$(PYTHON) $(CLIBS_DIR)\coutput.py -j $(CURDIR)\chkintegrity.json -i $(CURDIR)\args_options.cpp.tmpl cmdstruct | \
	 $(PYTHON) $(CLIBS_DIR)\coutput.py -j $(CURDIR)\chkintegrity.json -i - -o $(CURDIR)\args_options.cpp freefunc

$(CLIBS_DIR)\coutput.py:$(CLIBS_DIR)

$(DYNAMICDIR)\extargslib.dll:$(CLIBS_DIR)
	$(QUIETCMD)cd $(CLIBS_DIR)\common\extargslib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=0 /f makefile.win all && cd "$(CURDIR)"

$(DYNAMICDIR)\winlib.dll:$(CLIBS_DIR)
	$(QUIETCMD)cd $(CLIBS_DIR)\winlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=0 /f makefile.win all && cd "$(CURDIR)"

$(DYNAMICDIR)\json.dll:$(CLIBS_DIR)
	$(QUIETCMD)cd $(CLIBS_DIR)\common\jsonlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=0 /f makefile.win all && cd "$(CURDIR)"


$(STATICDIR)\extargslib.lib:$(CLIBS_DIR)
	$(QUIETCMD)cd $(CLIBS_DIR)\common\extargslib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=1 /f makefile.win all && cd "$(CURDIR)"

$(STATICDIR)\winlib.lib:$(CLIBS_DIR)
	$(QUIETCMD)cd $(CLIBS_DIR)\winlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=1 /f makefile.win all && cd "$(CURDIR)"

$(STATICDIR)\json.lib:$(CLIBS_DIR)
	$(QUIETCMD)cd $(CLIBS_DIR)\common\jsonlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=1 /f makefile.win all && cd "$(CURDIR)"

$(CLIBS_DIR):
	$(QUIETCMD)$(GIT) clone $(GIT_VERBOSE) https://github.com/jeppeter/clibs.git $(CLIBS_DIR)

clean_winlib:
	$(QUIETCMD)cd $(CLIBS_DIR)\winlib && $(MAKE) $(NOLOGO_MAKEFLAGS) /f makefile.win clean && cd "$(CURDIR)"

clean_json:clean_winlib
	$(QUIETCMD)cd $(CLIBS_DIR)\common\jsonlib && $(MAKE) $(NOLOGO_MAKEFLAGS) /f makefile.win clean && cd "$(CURDIR)"

clean_extargslib: clean_json
	$(QUIETCMD)cd $(CLIBS_DIR)\common\extargslib && $(MAKE) $(NOLOGO_MAKEFLAGS) /f makefile.win clean && cd "$(CURDIR)"


clean:clean_extargslib
	$(QUIETCMD) $(RM) *.exe *.obj 2>NUL
	$(QUIETCMD) $(RM) *.pdb *.ilk 2>NUL
	$(QUIETCMD) $(RM) *.dll 2>NUL
	$(QUIETCMD) $(RM) args_options.cpp 2>NUL
	$(QUIETCMD) $(RM) *.dll 2>NUL
	$(QUIETCMD) $(RM) pipewin.exe loglib.go loglib_windows.go 2>NUL
