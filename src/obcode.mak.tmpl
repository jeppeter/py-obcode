ifndef __OBCODE_MAK__
__OBCODE_MAK__ := 1

ifeq (${PYTHON},)
PYTHON=$(shell which python)
endif

ifneq (${V},)
OB_VERBOSE=-vvvv
else
OB_VERBOSE=
endif

ifeq (${O},)

define OB_MAK_FILE
$(1)
endef

define OB_TRANS_PATH
endef

define UNOB_MAK_FILE
$(1)
endef

define UNOB_MAK_FILE_SHORT
$(shell ${PYTHON} -c "import sys;c='%OBMAK_CODE%';sys.stdout.write('%s'%(c));"  | ${PYTHON} /dev/stdin  | ${PYTHON} /dev/stdin ${OB_VERBOSE} basename $(1))
endef

define UNOB_FUNC
$(shell ${PYTHON} -c "import sys;c='%OBMAK_CODE%';sys.stdout.write('%s'%(c));"  | ${PYTHON} /dev/stdin  | ${PYTHON} /dev/stdin ${OB_VERBOSE} obunfunc $(1))
endef

else


define OB_MAK_FILE
$(shell ${PYTHON} -c "import sys;c='%OBMAK_CODE%';sys.stdout.write('%s'%(c));"  | ${PYTHON} /dev/stdin  | ${PYTHON} /dev/stdin ${OB_VERBOSE} makob $(1))
endef

define OB_TRANS_PATH
$(shell ${PYTHON} -c "import sys;c='%OBMAK_CODE%';sys.stdout.write('%s'%(c));"  | ${PYTHON} /dev/stdin  | ${PYTHON} /dev/stdin ${OB_VERBOSE} obtrans --obtrans-srcdir "$(1)" --obtrans-dstdir "$(2)" "$(3)")
endef

define UNOB_MAK_FILE
$(shell ${PYTHON} -c "import sys;c='%OBMAK_CODE%';sys.stdout.write('%s'%(c));"  | ${PYTHON} /dev/stdin  | ${PYTHON} /dev/stdin ${OB_VERBOSE}  unmakob $(1))
endef

define UNOB_MAK_FILE_SHORT
$(shell ${PYTHON} -c "import sys;c='%OBMAK_CODE%';sys.stdout.write('%s'%(c));"  | ${PYTHON} /dev/stdin  | ${PYTHON} /dev/stdin ${OB_VERBOSE} unmakob --unmakob-short $(1))
endef

define UNOB_FUNC
$(shell ${PYTHON} -c "import sys;c='%OBMAK_CODE%';sys.stdout.write('%s'%(c));"  | ${PYTHON} /dev/stdin  | ${PYTHON} /dev/stdin ${OB_VERBOSE} obunfunc $(1))
endef

endif


ifeq (${OB_PATCH},)

define OB_ELF_PATCH
${PYTHON} -c "import sys;c='%OBPATCH_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} obpatchelfforge $(1)
endef

define OB_ELF_UNPATCH
${PYTHON} -c "import sys;c='%OBPATCH_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} obunpatchelfforge $(1)
endef

else

define OB_ELF_PATCH
${PYTHON} -c "import sys;c='%OBPATCH_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} obpatchelf $(1)
endef

define OB_ELF_UNPATCH
${PYTHON} -c "import sys;c='%OBPATCH_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} obunpatchelf $(1)
endef

endif


ifeq (${OB_CHKVAL},)


define  OB_CHKVAL_REPLS
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} replchkvalforge $(1)
endif

define OB_CHKVAL_FILL_FUNCS_ELF
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} chkvalfillforge $(1)
endif


define OB_CHKVAL_FMT_CHKVAL
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} fmtchkvalforge $(1)
endif

define OB_CHKVAL_FMT_HEADER
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} chkvalheaderforge $(1)
endif


define OB_CHKVAL_DUMP_FUNCS_ELF
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} chkvaldumpfuncsforge $(1)
endif

# else ${OB_CHKVAL}

else

define  OB_CHKVAL_REPLS
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} replchkval $(1)
endif



define OB_CHKVAL_FMT_HEADER
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} chkvalheader $(1)
endif

define OB_CHKVAL_FMT_CHKVAL
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} fmtchkval $(1)
endif

define OB_CHKVAL_FILL_FUNCS_ELF
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} chkvalfillelf $(1)
endif


define OB_CHKVAL_DUMP_FUNCS_ELF
${PYTHON} -c "import sys;c='%OBCHKVAL_CODE%';sys.stdout.write('%s'%(c));" | ${PYTHON} /dev/stdin | ${PYTHON} /dev/stdin ${OB_VERBOSE} chkvaldumpfuncself $(1)
endif


#endof ${OB_CHKVAL}
endif

# __OBCODE_MAK__
endif 