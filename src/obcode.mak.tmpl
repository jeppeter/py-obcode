ifndef __OBCODE_MAK__
__OBCODE_MAK__ := 1

ifeq (${PYTHON},)
PYTHON=$(shell which python)
endif

ifneq (${V},)
OB_VERBOSE=-vvvv
else
OB_VERBOSE=
endif

ifeq (${O},)

define OB_MAK_FILE
$(1)
endef

define OB_TRANS_PATH
endef

define UNOB_MAK_FILE
$(1)
endef

define UNOB_MAK_FILE_SHORT
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBCODE_STR%';exec(c);" ${OB_VERBOSE} basename $(1))
endef

define UNOB_FUNC
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBCODE_STR%';exec(c);" ${OB_VERBOSE} obunfunc $(1))
endef

else


define OB_MAK_FILE
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBCODE_STR%';exec(c);" ${OB_VERBOSE} makob $(1))
endef

define OB_TRANS_PATH
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBCODE_STR%';exec(c);" ${OB_VERBOSE} obtrans --obtrans-srcdir "$(1)" --obtrans-dstdir "$(2)" "$(3)")
endef

define UNOB_MAK_FILE
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBCODE_STR%';exec(c);" ${OB_VERBOSE}  unmakob $(1))
endef

define UNOB_MAK_FILE_SHORT
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBCODE_STR%';exec(c);"  ${OB_VERBOSE} unmakob --unmakob-short $(1))
endef

define UNOB_FUNC
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBCODE_STR%';exec(c);"  ${OB_VERBOSE} obunfunc $(1))
endef

endif



ifeq (${OB_PATCH},)

define ELF_PATCH
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBPATCH_STR%';exec(c);"  ${OB_VERBOSE} obpatchelfforge $(1))
endef

define ELF_UNPATCH
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBPATCH_STR%';exec(c);"  ${OB_VERBOSE} obunpatchelfforge $(1))
endef

else

define ELF_PATCH
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBPATCH_STR%';exec(c);"  ${OB_VERBOSE} obpatchelf $(1))
endef

define ELF_UNPATCH
$(shell ${PYTHON} -c "import sys;c='%PYTHON_OBPATCH_STR%';exec(c);"  ${OB_VERBOSE} obunpatchelf $(1))
endef

endif

# __OBCODE_MAK__
endif 